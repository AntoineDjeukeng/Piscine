#include <fcntl.h>
#include <unistd.h>
#include <stdio.h>

#define BUFFER_SIZE 1024  // Fixed buffer size for reading file contents

int main(int argc, char *argv[])
{
    if (argc == 1) {
        // No arguments provided
        write(2, "File name missing\n", 18);
        return 1;
    } 
    else if (argc > 2) {
        // Too many arguments
        write(2, "Too many arguments\n", 19);
        return 1;
    }

    // Open the file
    int fd = open(argv[1], O_RDONLY);
    if (fd == -1) {
        // Error opening the file
        write(2, "Cannot read file\n", 17);
        return 1;
    }

    // Read and display the file content
    char buffer[BUFFER_SIZE];
    ssize_t bytes_read;
    while ((bytes_read = read(fd, buffer, BUFFER_SIZE)) > 0) {
        write(1, buffer, bytes_read);  // Write content to standard output
    }

    if (bytes_read == -1) {
        // Error reading the file
        write(2, "Cannot read file\n", 17);
    }

    close(fd);  // Close the file descriptor
    return 0;
}
